
<%- include("../../views/partials/admin/adminsidebar") %>

<link rel="stylesheet" href="/css/admin.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    /* Base styles and variables */
    /* :root { 
        --primary-color: #0d6efd;
        --danger-color: #dc3545;
        --success-color: #198754;
        --warning-color: #ffc107;
        --info-color: #0dcaf0;
        --sidebar-width: 250px;
        --card-border-radius: 8px;
        --button-border-radius: 4px;
        --transition-speed: 0.3s;
    }*/
    /* Responsive sidebar and content */
    /*.content-wrapper {
        margin-left: var(--sidebar-width);
        padding: 25px;
        transition: margin-left var(--transition-speed);
        overflow-x: hidden;
    }
     */
    .content-header {
        margin-bottom: 25px;
        border-bottom: 1px solid #eee;
        padding-bottom: 10px;
    }
    
    .content-title {
        font-weight: 600;
        color: #333;
    }
    
    .error-message {
        color: var(--danger-color);
        font-size: 14px;
        margin-top: 5px;
        display: none;
    }
    
    /* Card styling */
    .card {
        border-radius: var(--card-border-radius);
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        margin-bottom: 20px;
        border: none;
    }
    
    .card-header {
        border-top-left-radius: var(--card-border-radius);
        border-top-right-radius: var(--card-border-radius);
        font-weight: 600;
    }
    
    /* Table styling */
    .table-responsive {
        overflow-x: auto;
        border-radius: var(--card-border-radius);
    }
    
    .table {
        margin-bottom: 0;
    }
    
    .table thead th {
        background-color: #f8f9fa;
        border-bottom-width: 1px;
        font-weight: 600;
        padding: 12px;
    }
    
    .table tbody td {
        padding: 12px;
        vertical-align: middle;
    }
    
    /* Search box styling */
    .search-group {
        max-width: 100%;
        margin-bottom: 20px;
    }
    
    .search-group .input-group {
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        border-radius: var(--button-border-radius);
    }
    
    .search-group .form-control {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        height: 45px;
    }
    
    .search-group .btn {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }
    
    /* Button styling */
    .btn {
        font-weight: 500;
        padding: 8px 16px;
        border-radius: var(--button-border-radius);
        transition: all 0.2s;
    }
    
    .btn-sm {
        padding: 5px 10px;
        font-size: 0.875rem;
    }
    
    .action-btn {
        margin: 3px;
        min-width: 85px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: var(--button-border-radius);
        transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .action-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .btn-actions-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 5px;
    }
    
    /* Pagination */
    .pagination-container {
        margin-top: 30px;
        gap: 10px;
    }
    
    .pagination-container .btn {
        min-width: 100px;
    }
    
    /* Form section */
    .form-section .card {
        height: 100%;
    }
    
    .form-label {
        font-weight: 500;
        margin-bottom: 8px;
    }
    
    .form-control {
        padding: 10px 15px;
        border-radius: var(--button-border-radius);
    }
    
    textarea.form-control {
        min-height: 120px;
    }
    
    /* Responsive breakpoints */
    @media (max-width: 1200px) {
        .content-wrapper {
            padding: 20px;
        }
    }
    
    @media (max-width: 992px) {
        .content-wrapper {
            margin-left: 0;
            padding: 15px;
        }
        
        .action-btn {
            min-width: 75px;
        }
    }
    
    @media (max-width: 768px) {
        .content-header {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .pagination-container {
            flex-direction: column;
            align-items: center;
        }
        
        .search-group {
            width: 100%;
            max-width: 100%;
        }
        
        .form-section, .table-section {
            padding: 0;
        }
    }
    
    @media (max-width: 576px) {
        .content-wrapper {
            padding: 10px;
        }
        
        .card-body {
            padding: 15px;
        }
        
        .content-title {
            font-size: 1.5rem;
        }
        
        .table tbody td {
            padding: 10px 5px;
        }
        
        .btn-actions-container {
            flex-direction: column;
            width: 100%;
        }
        
        .action-btn {
            width: 100%;
            margin: 2px 0;
        }
    }
    
    /* Toggle sidebar button styling */
    #toggleSidebar {
        position: fixed;
        top: 15px;
        left: 15px;
        z-index: 1000;
        display: none;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 4px;
        padding: 8px 12px;
    }
    
    @media (max-width: 992px) {
        #toggleSidebar {
            display: block;
        }
    }
</style>

<!-- Mobile Sidebar Toggle Button -->
<!-- <button id="toggleSidebar" class="d-lg-none">
    <i class="fas fa-bars"></i> Menu
</button> -->

<div class="main content-wrapper">
    <header class="content-header">
        <h2 class="content-title">Category Management</h2>
    </header>
    
    <div class="search-group">
        <form action="/admin/category" method="get">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search categories..." name="search">
                <button class="btn btn-primary" type="submit">
                    <i class="fas fa-search me-1"></i> Search
                </button>
            </div>
        </form>
    </div>
    
    <div class="row g-4">
        <!-- Form Section -->
        <div class="col-lg-4 form-section">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Create New Category</h5>
                </div>
                <div class="card-body">
                    <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                        <div class="mb-3">
                            <label for="product_name" class="form-label">Name</label>
                            <input type="text" name="name" placeholder="Enter category name" class="form-control" id="product_name" required/>
                            <div id="name-error" class="error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Enter category description" name="description" class="form-control" id="descriptionId" required></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-plus-circle me-2"></i>Create Category
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Table Section -->
        <div class="col-lg-8 table-section">
            <div class="card">
                <div class="card-body p-0">
                    <div class="table-responsive"> 
                        <table class="table table-hover text-center mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Offer</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (cat.length > 0) { %>
                                    <% cat.forEach((category, index) => { %>
                                        <tr>
                                            <td><%= (currentPage - 1) * 4 + index + 1 %></td>
                                            <td><%= category.name %></td>
                                            <td><%= category.description || "N/A" %></td>
                                            <td>
                                                <%if(category.categoryOffer){%>
                                                    <%=category.categoryOffer%>%
                                                <%}else{%>
                                                    0%
                                                <%}%>
                                            </td>
                                            <td>
                                                <div class="btn-actions-container">
                                                    <%if(category.categoryOffer===0){%>
                                                    <button class="btn btn-info btn-sm action-btn" onclick="addOffer('<%=category._id%>')">
                                                        <i class="fas fa-percent me-1"></i> Add Offer
                                                    </button>
                                                    <%}else{%>
                                                    <button class="btn btn-danger btn-sm action-btn" onclick="removeOffer('<%=category._id%>')">
                                                        <i class="fas fa-trash-alt me-1"></i> Remove Offer
                                                    </button>
                                                    <%}%>
                                                    
                                                    <% if (category.isListed) { %>
                                                        <a href="/admin/listCategory?id=<%=category._id%>" class="btn btn-danger btn-sm action-btn">
                                                            <i class="fas fa-eye-slash me-1"></i> Unlist
                                                        </a>
                                                    <% } else { %>
                                                        <a href="/admin/unlistCategory?id=<%=category._id%>" class="btn btn-success btn-sm action-btn">
                                                            <i class="fas fa-eye me-1"></i> List
                                                        </a>
                                                    <% } %>
                                                    
                                                    <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-warning btn-sm action-btn">
                                                        <i class="fas fa-edit me-1"></i> Edit
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="text-center py-4">
                                            <i class="fas fa-folder-open fa-2x mb-3 text-muted"></i>
                                            <p class="mb-0">No categories found</p>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4 pagination-container">
        <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>" class="btn btn-outline-primary">
                <i class="fas fa-chevron-left me-2"></i> Previous
            </a>
        <% } %>

        <span class="btn btn-primary disabled">Page <%= currentPage %> of <%= totalPages %></span>

        <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>" class="btn btn-outline-primary">
                Next <i class="fas fa-chevron-right ms-2"></i>
            </a>
        <% } %>
    </div>  
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.0/sweetalert2.all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
<script>
function handleFormSubmit(event){
    event.preventDefault()
    if(!validateForm()){
        return;
    }
    const name=document.getElementsByName("name")[0].value;
    const description=document.getElementById("descriptionId").value;

    fetch('/admin/addCategory', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: 'success',
            title: "Success",
            text: "Category added successfully"
        }).then(() => {
            location.reload();
        });
    })
    .catch(error => {
        if (error.message.toLowerCase() === "category already exists") {
            Swal.fire({
                icon: 'error',
                title: "Oops",
                text: "Category already exists"
            });
        } else { 
            Swal.fire({
                icon: 'error',
                title: "Oops",
                text: "An error occurred while adding the category"
            });
        }
    });
}

function validateForm(){
    clearErrorMessage()
    const name=document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim()
    isValid=true;

    if(name===""){
        displayErrorMessage("name-error","Please enter a name")
        isValid=false
    }else if(!/^[a-zA-Z\s]+$/.test(name)){
        displayErrorMessage("name-error","Category name should contain only alphabetic characters")
        isValid=false
    }
    if(description===""){
        displayErrorMessage("description-error","Please enter a description")
        isValid=false
    }
    return isValid
}

function displayErrorMessage(elementId,message){
    var errorElement = document.getElementById(elementId)
    errorElement.innerText = message
    errorElement.style.display = "block"
}

function clearErrorMessage(){
    const errorElements = document.getElementsByClassName("error-message")
    Array.from(errorElements).forEach((element)=>{
        element.innerText = ""
        element.style.display = "none"
    })
}

async function addOffer(categoryId) {
    const {value:amount}=await Swal.fire({
  title: "Add Offer Percentage",
  input: "number",
  inputLabel: "Percentage",
  inputPlaceholder: "Enter percentage (e.g., 10 for 10%)",
  inputAttributes: {
    min: 1,
    max: 99,
  },
  showCancelButton: true,
  confirmButtonText: "Add Offer",
  cancelButtonText: "Cancel",
  inputValidator: (value) => {
    if (!value || value < 1 || value > 99) {
      return "Please enter a valid percentage between 1 and 100";
    }
  },
  customClass: {
    validationMessage: 'my-validation-message'
  },
  didOpen: () => {
    const style = document.createElement('style');
    style.textContent = `
      .my-validation-message {
        word-wrap: break-word;
        overflow-wrap: break-word;
        max-width: 100%;
        margin: 0 auto;
      }
    `;
    document.head.appendChild(style);
  }
});

    if(amount){
        try {
            const response = await fetch("/admin/addCategoryOffer",{
                method: "POST",
                headers: {
                    'content-type': "application/json"
                },
                body: JSON.stringify({
                    percentage: amount,
                    categoryId: categoryId
                }),
            });

            const data = await response.json()
            if(response.ok && data.status === true){
                Swal.fire({
                    icon: 'success',
                    title: 'Offer Added',
                    text: 'The offer has been added successfully',
                    confirmButtonColor: '#0d6efd'
                }).then(()=>{
                    location.reload()
                })
            }else{
                Swal.fire({
                    icon: 'error',
                    title: "Failed", 
                    text: data.message || "Adding offer failed",
                    confirmButtonColor: '#dc3545'
                })
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: "Error",
                text: "An error occurred while adding the offer",
                confirmButtonColor: '#dc3545'
            });
            console.log("Error adding offer", error)
        }
    }
}

async function removeOffer(categoryId){
    const result = await Swal.fire({
        title: 'Remove Offer?',
        text: 'Are you sure you want to remove this offer?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, remove it!'
    });
    
    if (result.isConfirmed) {
        try {
            const response = await fetch("/admin/removeCategoryOffer",{
                method: "POST",
                headers: {
                    'content-type': "application/json",
                },
                body: JSON.stringify({
                    categoryId: categoryId,
                })
            })

            const data = await response.json()
            if(response.ok && data.status === true){
                Swal.fire({
                    icon: 'success',
                    title: "Offer removed",
                    text: "The offer has been removed successfully",
                    confirmButtonColor: '#0d6efd'
                }).then(()=>{
                    location.reload()
                })
            }
            else{
                Swal.fire({
                    icon: 'error',
                    title: "Failed", 
                    text: data.message || "Removing offer failed",
                    confirmButtonColor: '#dc3545'
                })
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: "Error",
                text: "An error occurred when removing the offer",
                confirmButtonColor: '#dc3545'
            })
            console.error("Error removing offer", error)
        }
    }
}

// Handle sidebar toggling for mobile devices
document.addEventListener('DOMContentLoaded', function() {
    const toggleSidebarBtn = document.getElementById('toggleSidebar');
    const contentWrapper = document.querySelector('.content-wrapper');
    
    if (toggleSidebarBtn && contentWrapper) {
        toggleSidebarBtn.addEventListener('click', function() {
            if (contentWrapper.style.marginLeft === '0px' || contentWrapper.style.marginLeft === '') {
                contentWrapper.style.marginLeft = '250px';
            } else {
                contentWrapper.style.marginLeft = '0px';
            }
        });
    }
    
    // Auto-adjust on small screens
    function adjustLayout() {
        if (window.innerWidth <= 992 && contentWrapper) {
            contentWrapper.style.marginLeft = '0px';
        } else if (contentWrapper) {
            contentWrapper.style.marginLeft = '250px';
        }
    }
    
    window.addEventListener('resize', adjustLayout);
    adjustLayout();
});
</script>