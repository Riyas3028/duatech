<%- include("../../views/partials/admin/adminheader") %>
<%- include("../../views/partials/admin/adminsidebar") %>
<link rel="stylesheet" href="/css/admin.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<style>
    .container {
        margin-top: 100px;
    }
    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
        display: none;
    }
</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 mt-60">
            <form method="post" action="/admin/editCategory/<%=category._id%>" onsubmit="return handleFormSubmit(event)">
                <div class="mb-4 mt-30">
                    <label for="categoryName" class="form-label">Name</label>
                    <input type="text" id="categoryName" name="categoryName" value="<%=category.name%>" class="form-control border" />
                    <div id="name-error" class="error-message"></div>
                </div>

                <div class="mb-4">
                    <label for="descriptionId" class="form-label">Description</label>
                    <textarea id="descriptionId" name="description" class="form-control border"><%=category.description%></textarea>
                    <div id="description-error" class="error-message"></div>
                </div>

                <div class="d-grid text-end mt-30 col-md-5">
                    <button class="btn btn-primary" type="submit">Update category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.0/sweetalert2.all.min.js"></script>
<script>
function handleFormSubmit(event) {
    event.preventDefault();
    
    if (!validateForm()) {
        return;
    }

    const name = document.getElementById("categoryName").value.trim();
    const description = document.getElementById("descriptionId").value.trim();

    fetch(`/admin/editCategory/<%=category._id%>`, { 
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ categoryName: name, description })
})
.then(response => {
    console.log("Response status:", response.status);
    return response.json().then(data => {
        console.log("Response data:", data);
        if (!response.ok) {
            throw new Error(data.error);
        }
        return data;
    });
})
.then(data => {
    Swal.fire({
        icon: 'success',
        title: "Success",
        text: data.message || "Category updated successfully"
    }).then(() => location.reload());
})
.catch(error => {
    console.error("Error:", error); // Debug log
    if (error.message.toLowerCase() === "category already exists") {
        Swal.fire({
            icon: 'error',
            title: "Oops",
            text: "Category already exists"
        });
    } else {
        Swal.fire({
            icon: 'error',
            title: "Oops",
            text: error.message || "An error occurred while updating the category"
        });
    }
});

}

function validateForm() {
    clearErrorMessage();
    let isValid = true;

    const name = document.getElementById("categoryName").value.trim();
    const description = document.getElementById("descriptionId").value.trim();

    if (name === "") {
        displayErrorMessage("name-error", "Please enter a category name");
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
        isValid = false;
    }

    if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessage() {
    document.querySelectorAll('.error-message').forEach(element => {
        element.innerText = "";
        element.style.display = "none";
    });
}
</script>
