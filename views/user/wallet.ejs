<!DOCTYPE html>
<html lang="en">
<head>
  <%- include("../../views/partials/user/header") %>

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Wallet & Transactions</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    :root {
      --primary-color: #1b65c5;
      --secondary-color: #4a5568;
      --text-dark: #1e3a8a;
      --text-light: #4b5563;
      --success-color: #48bb78;
      --danger-color: #f56565;
      --border-color: #d1d5db;
      --bg-light: #f9fafb;
      --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      --border-radius: 8px;
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f5f5f5;
      color: #333;
      margin-top: 0;
      overflow-x: hidden;
    }
    
    /* Banner Area */
    .banner-area {
      padding: 80px;
      margin-top: 0;
      border-bottom: 1px solid #dee2e6;
      width: 100%;
    }
    
    .breadcrumb-banner {
      padding-top: 80px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      width: 100%;
    }
    
    /* User Info */
    /* .profile-image-container {
      width: 50px;
      height: 50px;
      background-color: #e2e8f0;
      border-radius: 50%;
      margin-right: 15px;
    } */
    
    .col-left {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
    }
    
    .col-first h1 {
      font-size: 1.8rem;
      font-weight: 700;
      margin-bottom: 5px;
      color: var(--text-dark);
    }
    
    /* Main Content Area */
    .main-content {
      background-color: transparent;
      padding: 0 15px 30px;
      width: 100%;
    }
    
    .wallet-container {
      background-color: #ffffff;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      padding: 20px;
      margin-bottom: 30px;
      width: 100%;
    }
    
    .wallet-title {
      color: var(--text-dark);
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 25px;
      border-bottom: 2px solid #edf2f7;
      padding-bottom: 15px;
    }
    
    /* Balance Card */
    .balance-card {
      background: linear-gradient(135deg, #4a5568 0%, #2d3748 100%);
      color: white;
      border-radius: var(--border-radius);
      padding: 30px 20px;
      text-align: center;
      height: 100%;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      margin-bottom: 20px;
    }
    
    .balance-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
    }
    
    .balance-card .amount {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 10px;
      line-height: 1;
    }
    
    .balance-card p {
      font-size: 1.1rem;
      margin: 0;
      opacity: 0.9;
    }
    
    /* Action Buttons */
    .wallet-actions {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 30px;
    }
    
    .wallet-action-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 12px 24px;
      background-color: var(--secondary-color);
      color: white;
      text-decoration: none;
      border-radius: var(--border-radius);
      transition: all 0.3s ease;
      border: none;
      font-weight: 500;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      flex: 1 1 auto;
      min-width: 140px;
    }
    
    .wallet-action-button:hover {
      background-color: #2d3748;
      color: white;
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }
    
    .wallet-action-button i {
      margin-right: 10px;
    }
    
    .wallet-action-button.add-money {
      background-color: var(--primary-color);
    }
    
    .wallet-action-button.add-money:hover {
      background-color: #1854a0;
    }
    
    /* Transaction Table */
    .transaction-section {
      margin-top: 35px;
      overflow-x: auto;
      width: 100%;
    }
    
    .transaction-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 20px;
      color: var(--text-dark);
    }
    
    .transaction-table {
      border-collapse: separate;
      border-spacing: 0;
      width: 100%;
      min-width: 600px;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }
    
    .transaction-table thead th {
      background-color: #f8fafc;
      padding: 15px;
      font-weight: 600;
      color: var(--text-dark);
      border-bottom: 2px solid #edf2f7;
      white-space: nowrap;
    }
    
    .transaction-table tbody td {
      padding: 15px;
      border-top: 1px solid #edf2f7;
      vertical-align: middle;
    }
    
    .transaction-table tbody tr:hover {
      background-color: #f8fafc;
    }
    
    /* Transaction Status */
    .transaction-status {
      display: inline-block;
      padding: 5px 10px;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 600;
      text-transform: uppercase;
      white-space: nowrap;
    }
    
    .status-credit {
      background-color: rgba(72, 187, 120, 0.2);
      color: var(--success-color);
    }
    
    .status-debit {
      background-color: rgba(245, 101, 101, 0.2);
      color: var(--danger-color);
    }
    
    /* Modal Styling */
    .modal-content {
      border-radius: 10px;
      border: none;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    
    .modal-header {
      background-color: #f8fafc;
      border-bottom: 1px solid #edf2f7;
      padding: 15px 20px;
      border-radius: 10px 10px 0 0;
    }
    
    .modal-title {
      color: var(--text-dark);
      font-weight: 600;
    }
    
    .modal-body {
      padding: 25px;
    }
    
    .form-control-lg {
      height: 54px;
      font-size: 1.25rem;
    }
    
    /* Quick Amount Buttons */
    .quick-amount-container {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      justify-content: center;
    }
    
    .quick-amount {
      display: inline-block;
      padding: 10px 15px;
      border: 2px solid var(--secondary-color);
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: all 0.3s ease;
      font-weight: 500;
      text-align: center;
      flex: 1 1 calc(50% - 10px);
      max-width: 120px;
    }
    
    .quick-amount:hover {
      background: var(--secondary-color);
      color: white;
    }
    
    /* Pagination */
    .pagination-container {
      margin-top: 30px;
      width: 100%;
      overflow-x: auto;
    }
    
    .pagination {
      flex-wrap: wrap;
      justify-content: center;
    }
    
    .pagination .page-link {
      color: var(--secondary-color);
      border-radius: 4px;
      margin: 0 3px;
      min-width: 35px;
      text-align: center;
    }
    
    .pagination .page-item.active .page-link {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    /* Responsive Adjustments */
    @media (max-width: 992px) {
      .sidebar {
        margin-bottom: 20px;
        position: static;
        width: 100%;
      }
      
      .breadcrumb-banner {
        padding-top: 60px;
        flex-direction: column;
        align-items: flex-start;
      }
      
      .col-first h1 {
        font-size: 1.5rem;
      }
    }
    
    @media (max-width: 768px) {
      .banner-area {
        padding: 15px 0;
      }
      
      .breadcrumb-banner {
        padding-top: 40px;
      }
      
      .wallet-container {
        padding: 15px;
      }
      
      .balance-card {
        padding: 20px 15px;
      }
      
      .balance-card .amount {
        font-size: 2rem;
      }
      
      .wallet-actions {
        flex-direction: column;
      }
      
      .wallet-action-button {
        width: 100%;
        margin: 5px 0;
      }
      
      .transaction-section {
        margin-top: 25px;
      }
      
      .table-responsive {
        border: none;
        margin-bottom: 0;
      }
      
      .transaction-title {
        font-size: 1.1rem;
      }
      
      .quick-amount {
        flex: 1 1 calc(50% - 10px);
        max-width: none;
      }
    }
    
    @media (max-width: 576px) {
      .wallet-title {
        font-size: 1.2rem;
        margin-bottom: 15px;
        padding-bottom: 10px;
      }
      
      .balance-card .amount {
        font-size: 1.8rem;
      }
      
      .transaction-status {
        padding: 3px 8px;
        font-size: 0.7rem;
      }
      
      .modal-body {
        padding: 15px;
      }
      
      .col-left h5 {
        font-size: 1rem;
      }
      
      .col-left p {
        font-size: 0.85rem;
      }
      
      .col-first h1 {
        font-size: 1.3rem;
      }
      
      .col-first nav {
        font-size: 0.85rem;
      }
      
      .quick-amount {
        font-size: 0.9rem;
        padding: 8px 10px;
      }
      
      .pagination .page-link {
        min-width: 30px;
        font-size: 0.85rem;
      }
    }
    
    /* Fix for table overflow on mobile */
    .table-responsive {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }
  </style>
</head>
<body>

<!-- Banner Area -->
<section class="banner-area">
  <div class="container">
    <div class="breadcrumb-banner">
      <div class="col-left">
        <div class="profile-image-container"></div>
        <div>
          <h5 id="fullName" style="color: #121311; margin: 0;"><%= user.name || 'John Doe' %></h5>
          <p id="email" style="color: #121311; margin: 0;"><%= user.email || 'johndoe@example.com' %></p>
        </div>
      </div>
      <div class="col-first">
        <h1>Wallet</h1>
        <nav class="d-flex align-items-center">
          <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
          <a href="/wallet">Wallet</a>
        </nav>
      </div>
    </div>
  </div>
</section>

<!-- Main Content -->
<div class="content-wrapper py-4">
  <div class="row">
    <!-- Sidebar -->
    <div class=" col-lg-3 col-sm-6 col-md-3">
      <%- include('../partials/user/profileSidebar') %>
    </div>
    
    <!-- Main Content Area -->
    <div class="col-lg-9 col-md-9">
      <div class="wallet-container">
        <h2 class="wallet-title">Wallet & Transactions</h2>
        
        <!-- Balance Card -->
        <div class="row mb-4">
          <div class="col-md-6 col-sm-8 col-10 mx-auto">
            <div class="balance-card">
              <p class="amount">
                ₹<%if(wallet.balance){%>
                  <span id="availableBalance"><%= wallet.balance.toFixed(2) %></span>
                <%}else{%>
                  <span id="availableBalance">0</span>
                <%}%>
              </p>
              <p>Available Balance</p>
            </div>
          </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="wallet-actions">
          <button class="wallet-action-button add-money" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
            <i class="fas fa-plus-circle"></i> Add Balance
          </button>
          <button class="wallet-action-button" data-bs-toggle="modal" data-bs-target="#withdrawModal">
            <i class="fas fa-minus-circle"></i> Withdraw
          </button>
        </div>
        
        <!-- Transaction History -->
        <div class="transaction-section">
          <h3 class="transaction-title">Transaction History</h3>
          <div class="table-responsive">
            <table class="table transaction-table">
              <thead>
                <tr>
                  <th>Amount</th>
                  <th>Purpose</th>
                  <th>Date</th>
                  <th>Type</th>
                </tr>
              </thead>
              <tbody>
                <% if(transactions && transactions.length > 0) { %>
                  <% transactions.forEach((transaction) => { %> 
                    <tr>
                      <td>₹<%= transaction?.amount.toFixed(2) %></td>
                      <td><%= transaction.description %></td>
                      <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                      <td>
                        <span class="transaction-status <%= transaction.type === 'credit' ? 'status-credit' : 'status-debit' %>">
                          <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                        </span>
                      </td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="4" class="text-center">No transactions found</td>
                  </tr>
                <% } %> 
              </tbody>
            </table>
          </div>
          
          <!-- Pagination -->
          <div class="pagination-container">
            <nav aria-label="Page navigation">
              <ul class="pagination pagination-sm flex-wrap">
                <% if (currentPage > 1) { %>
                  <li class="page-item">
                    <a href="?page=<%= currentPage - 1 %>" class="page-link">&laquo;</a>
                  </li>
                <% } %>
                
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <% if (i === currentPage) { %>
                    <li class="page-item active">
                      <span class="page-link"><%= i %></span>
                    </li>
                  <% } else { %>
                    <li class="page-item">
                      <a href="?page=<%= i %>" class="page-link"><%= i %></a>
                    </li>
                  <% } %>
                <% } %>
                
                <% if (currentPage < totalPages) { %>
                  <li class="page-item">
                    <a href="?page=<%= currentPage + 1 %>" class="page-link">&raquo;</a>
                  </li>
                <% } %>
              </ul>
            </nav>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Money Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Money to Wallet</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="mb-4">
          <input type="number" id="amount" class="form-control form-control-lg text-center" 
            placeholder="Enter Amount (₹)" min="1" step="1">
        </div>
        <div class="quick-amount-container mb-4">
          <div class="quick-amount" onclick="setAmount(10000)">₹10,000</div>
          <div class="quick-amount" onclick="setAmount(50000)">₹50,000</div>
          <div class="quick-amount" onclick="setAmount(100000)">₹100,000</div>
          <div class="quick-amount" onclick="setAmount(200000)">₹200,000</div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" onclick="addMoney()" class="btn btn-primary" id="payButton">
          Proceed to Pay
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Withdraw Money Modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Withdraw Money</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="withdrawAmount" class="form-label">Enter Amount to Withdraw</label>
          <input type="number" id="withdrawAmount" class="form-control form-control-lg" min="1" step="1">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="withdrawButton">Withdraw</button>
      </div>
    </div>
  </div>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function setAmount(amount) {
    document.getElementById("amount").value = amount;
  }

  async function addMoney() {
    const amount = document.getElementById("amount").value;
    if (!amount || amount <= 0) {
      Swal.fire({
        title: 'Invalid Amount',
        text: 'Please enter a valid amount.',
        icon: 'warning',
        confirmButtonColor: '#1b65c5'
      });
      return;
    }

    try {
      // Create Order from Backend
      const response = await fetch("/wallet/create-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount }),
      });

      const order = await response.json();

      const options = {
        key: "<%= process.env.RAZORPAY_KEY_ID %>",
        amount: order.amount,
        currency: "INR",
        name: "DuaTech Wallet",
        description: "Wallet Top-Up",
        order_id: order.id,
        handler: async function (response) {
          try {
            const verifyRes = await fetch("/wallet/verify-payment", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                razorpay_order_id: response.razorpay_order_id,
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_signature: response.razorpay_signature,
                amount: amount,
              }),
            });

            const result = await verifyRes.json();
            if (result.success) {
              Swal.fire({
                title: "Success!",
                text: "Wallet Recharged Successfully!",
                icon: "success",
                confirmButtonText: "OK",
                confirmButtonColor: '#1b65c5'
              }).then(() => {
                location.reload(); 
              });
            } else {
              Swal.fire({
                title: "Error!",
                text: "Payment Verification Failed",
                icon: "error",
                confirmButtonText: "Try Again",
                confirmButtonColor: '#1b65c5'
              });
            }
          } catch (error) {
            console.error("Error verifying payment:", error);
            Swal.fire({
              title: "Error!",
              text: "An unexpected error occurred. Please try again.",
              icon: "error",
              confirmButtonText: "OK",
              confirmButtonColor: '#1b65c5'
            });
          }
        },
        prefill: {
          email: "<%= user.email %>",
          contact: "<%= user.phone %>",
        },
        theme: { color: "#1b65c5" },
      };

      const paymentObject = new Razorpay(options);
      paymentObject.open();
    } catch (error) {
      console.error("Error initiating payment:", error);
      Swal.fire({
        title: "Error!",
        text: "Failed to initiate payment. Please try again.",
        icon: "error",
        confirmButtonText: "OK",
        confirmButtonColor: '#1b65c5'
      });
    }
  }

  document.getElementById("withdrawButton").addEventListener("click", async () => {
    const amount = document.getElementById("withdrawAmount").value;

    if (!amount || amount < 1) {
      Swal.fire({
        title: 'Invalid Amount',
        text: 'Please enter a valid amount',
        icon: 'warning',
        confirmButtonColor: '#1b65c5'
      });
      return;
    }

    try {
      const response = await fetch("/wallet/withdrawMoney", {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ amount }),
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          title: "Success!",
          text: "Money withdrawn successfully!",
          icon: "success",
          confirmButtonText: "OK",
          confirmButtonColor: '#1b65c5',
          timer: 5000,
          timerProgressBar: true,
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          title: "Error!",
          text: data.message || "Failed to withdraw money. Please try again.",
          icon: "error",
          confirmButtonText: "OK",
          confirmButtonColor: '#1b65c5',
          timer: 5000,
          timerProgressBar: true,
        });
      }
    } catch (error) {
      console.error("Error:", error);
      Swal.fire({
        title: "Error!",
        text: "Failed to withdraw money. Please try again.",
        icon: "error",
        confirmButtonText: "OK",
        confirmButtonColor: '#1b65c5',
        timer: 5000,
        timerProgressBar: true,
      });
    }
  });
</script>
<%- include("../../views/partials/user/footer") %>
</body>
</html>