<%- include('../partials/user/header') %>

<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
 .card-green {
   background-color: #ADD8E6;
 }
 .main {
   padding: 30px 0;
 }

 .dashboard-menu {
   background-color: #cce3e6;
   border-radius: 10px;
   padding: 15px;
   box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
 }

 .dashboard-menu .nav-link {
   font-weight: bold;
   color: #30683c;
   box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3), 0 4px 20px rgba(0, 191, 255, 0.2);
   transition: box-shadow 0.3s ease;
 }

 .dashboard-menu .nav-link:hover {
   color: #00bfff;
   box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5), 0 6px 25px rgba(0, 191, 255, 0.4);
 }

 .card {
   border-radius: 10px;
   box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
   margin-bottom: 20px;
 }

 .card-header {
   background-color: #487379;
   color: white;
   border-radius: 10px 10px 0 0;
 }

 /* .profile-image-container {
   display: flex;
   align-items: center;
 } */

 /* .rounded-circle {
   border-radius: 50%;
   border: 2px solid #fff;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
 } */

 .ml-3 {
   margin-left: 15px;
 }

 body {
    background-color: #f7f7f7;
 }
 
 .main-content {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
 }
 
 .main-content h2 {
    margin-bottom: 20px;
 }
 
 .form-group label {
    font-weight: bold;
 }
 
 .form-group span {
    color: red;
 }
 
 .btn-orange {
    background-color: #ff6600;
    color: white;
 }
 
 .btn-orange:hover {
    background-color: #e65c00;
 }
 
 .btn-blue {
    background-color: #0000ff;
    color: white;
 }
 
 .btn-blue:hover {
    background-color: #0000cc;
 }
 
 .photo img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
 }
 
 .order-header {
    background-color: #f0f0f0;
    padding: 10px;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
 }
 
 .order-body {
    padding: 20px;
 }
 
 .order-footer {
    padding: 10px;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
 }
 
 .order-card {
    border: 1px solid #dee2e6;
    border-radius: 5px;
    margin-bottom: 20px;
 }
 
 .order-status {
    color: red;
 }
 
 .order-ship-to {
    color: green;
 }
 
 .order-link {
    color: blue;
    text-decoration: none;
 }
 
 .order-link:hover {
    text-decoration: underline;
 }
 
 .btn-orange {
    background-color: orange;
    color: white;
 }
 
 .product-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
 }
 
 .status-badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: bold;
    text-transform: uppercase;
    border-radius: 0.25rem;
    color: white;
 }
 
 .search-container {
    margin-bottom: 20px;
 }
 
 .search-form {
    width: 100%;
 }
 
 .no-style {
    text-decoration: none;
    color: inherit;
 }
 
 /* Responsive styles */
 @media (max-width: 991px) {
    .order-header .row > div {
       margin-bottom: 8px;
    }
    
    .order-header .text-end {
       text-align: left !important;
    }
 }
 
 @media (max-width: 767px) {
    .dashboard-menu {
       padding: 10px;
       margin-bottom: 20px;
    }
    
    .card {
       margin-bottom: 15px;
    }
    
    .col-md-10 {
       padding-left: 15px;
       padding-right: 15px;
    }
    
    .order-header {
       padding: 15px 10px;
    }
    
    .order-actions {
       display: flex;
       justify-content: space-between;
       margin-top: 10px;
       width: 100%;
    }
    
    .product-image {
       width: 60px;
       height: 60px;
    }
    
    .search-form {
       flex-direction: row;
       flex-wrap: wrap;
    }
    
    .search-form input {
       flex: 1;
       min-width: 200px;
    }
    
    .search-form button, 
    .search-form a {
       flex: 0 0 auto;
       margin-top: 0;
    }
 }
 
 @media (max-width: 575px) {
    .banner-area .breadcrumb-banner {
       flex-direction: column;
       align-items: flex-start;
    }
    
    .banner-area .col-first {
       margin-top: 15px;
    }
    
    .order-card {
       margin-bottom: 15px;
    }
    
    .order-header {
       flex-direction: column;
    }
    
    .order-header [class*="col-"] {
       width: 100%;
       margin-bottom: 5px;
    }
    
    .order-body .row {
       flex-direction: column;
    }
    
    .order-body .col-md-2,
    .order-body .col-md-6 {
       width: 100%;
       text-align: center;
       margin-bottom: 10px;
    }
    
    .order-body .col-md-6 {
       text-align: left;
    }
    
    .product-image {
       width: 100px;
       height: 100px;
       margin: 0 auto 10px;
    }
    
    .pagination {
       flex-wrap: wrap;
       justify-content: center;
    }
    
    .pagination a {
       margin: 2px;
    }
    
    .search-container {
       padding: 0 15px;
    }
    
    .search-form {
       gap: 5px !important;
    }
    
    .search-form input {
       width: 100% !important;
       margin-bottom: 5px;
    }
    
    .search-form button,
    .search-form a {
       flex: 1;
    }
    
    .modal-footer {
       flex-direction: column;
    }
    
    .modal-footer button {
       width: 100%;
       margin: 5px 0;
    }
 }
</style>

<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-between">
            <div class="col-left d-flex align-items-center">
                <div class="profile-image-container">
                    
                </div>
                <div class="ml-3">
                    <h5 id="fullName" style="color: #121311;"><%= user.name || 'John Doe' %></h5>
                    <p id="email" style="color: #121311;"><%= user.email || 'johndoe@example.com' %></p>
                </div>
            </div>
            <div class="col-first">
                <h1>My Orders</h1>
                <nav class="d-flex align-items-center">
                    <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/orders">Orders</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container-fluid mt-2">
    <div class="row">
        <!-- Sidebar -->
        <div class=" side col-lg-3 col-md-3 col-sm-6">
            <%- include('../partials/user/profileSidebar') %>
        </div>
        
        <!-- Main Content -->
        <div class="col-lg-9 col-md-9">
            <h2 class="">Your Orders</h2>
            
            <div class="search-container mb-4">
                <form action="/orderSearch" method="POST" class="search-form d-flex flex-wrap gap-2">
                    <input type="text" id="searchInput" name="query" placeholder="Enter Order Id..." class="form-control" />
                    <button type="submit" class="btn btn-secondary">Search</button>
                    <a href="/orders" id="clearButton" class="btn btn-secondary">Clear</a>
                </form>
            </div>
            
            <% if (orders && orders.length > 0) { %>
                <% orders.forEach(order => { %>
                    <div class="order-card">
                        <div class="order-header">
                            <div class="row g-2">
                                <div class="col-6 col-md-2">
                                    <small class="text-muted">ORDER PLACED</small><br>
                                    <%= new Date(order.createdAt).toLocaleDateString() %>
                                </div>
                                <div class="col-6 col-md-1">
                                    <small class="text-muted">TOTAL</small><br>
                                    â‚¹<%= Math.round(order.finalAmount) %>
                                </div>
                                <div class="col-12 col-md-3">
                                    <small class="text-muted">ORDER ID</small><br>
                                    <span class="text-truncate d-inline-block" style="max-width: 100%;">#<%= order.orderId %></span>
                                </div>
                                <div class="col-12 col-md-2">
                                    <small class="text-muted">STATUS</small><br>
                                    <span class="status-badge <%= 
                                        order.status === 'delivered' ? 'bg-success' :
                                        order.status === 'cancelled' ? 'bg-danger' :
                                        order.status === 'shipped' ? 'bg-info' :
                                        'bg-warning'
                                    %>">
                                        <%= order.status.toUpperCase() %>
                                    </span>
                                    <%if(order.status === 'delivered'){%>
                                        On
                                        <%=new Date(order.deliveredAt).toLocaleDateString()%>
                                    <%}%> 
                                    <%if(order.status === 'returned'){%>
                                        On
                                        <%=new Date(order.updatedAt).toLocaleDateString()%>
                                    <%}%>
                                </div>
                                <div class="col-12 col-md-2">
                                    <small class="text-muted">PAYMENT METHOD</small><br>
                                    <% if (order.paymentMethod === 'cod') { %>
                                        CASH ON DELIVERY
                                    <% } else if (order.paymentMethod === 'online payment'&&order.paymentStatus==='Success') { %>
                                        ONLINE PAYMENT
                                    <% } else if (order.paymentMethod === 'wallet') { %>
                                        WALLET PAYMENT
                                    <% } else if(order.paymentStatus !== "Success"){ %>
                                        <a href="/retryPayment?orderId=<%=order.orderId%>" class="btn btn-primary">Retry Payment</a>
                                      <% } %>
                                </div>
                                <div class="col-12 col-md-2 mt-2 mt-md-0">
                                    <div class="d-flex flex-wrap gap-2">
                                        <a href="/orderDetails?orderId=<%= order.orderId %>" 
                                           class="btn btn-outline-primary btn-sm" style="height: 30px;">View Details</a>
                                        
                                        <% if (order.status === 'delivered' && !order.returnReason && order.requestStatus !== "rejected") { %>
                                            <button onclick="initiateReturn('<%= order._id %>')" 
                                                    class="btn btn-warning btn-sm">
                                                Return
                                            </button>
                                        <% } else if (order.status === 'Return Requested' && order.requestStatus === 'pending') { %>
                                            <button onclick="cancelReturn('<%= order._id %>')"
                                                    class="btn btn-danger btn-sm">
                                                Cancel Return
                                            </button>
                                        <% } else if (!['delivered', 'cancelled', 'Return Requested', 'returning', 'returned','Pending'].includes(order.status)) { %>
                                            <button onclick="cancelOrder('<%= order._id %>')"
                                                    class="btn btn-outline-danger btn-sm">
                                                Cancel
                                            </button>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <%for(let i=0;i<order.orderedItems.length;i++){%>
                        <div class="order-body">
                            <div class="row align-items-center">
                                <div class="col-12 col-sm-3 col-md-2 text-center text-sm-start mb-3 mb-sm-0">
                                    <img src="/uploads/re-image/<%= order.orderedItems[i].product.productImage[0] %>" 
                                         alt="<%= order.orderedItems[i].productName %>"
                                         class="product-image">
                                </div>
                                <div class="col-12 col-sm-9 col-md-6">
                                    <a href="/details?id=<%= order.orderedItems[i].product._id %>" class="no-style">
                                        <h5 class="mb-2"><%= order.orderedItems[i].product.productName %></h5>
                                    </a>
                                    <div class="d-flex flex-wrap gap-3">
                                        <p class="text-muted mb-0">Quantity: <%= order.orderedItems[i].quantity %></p>
                                        <p class="text-muted mb-0">Price: â‚¹<%= order.orderedItems[i].product.salePrice*order.orderedItems[i].quantity %></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <%}%>
                    </div>
                <% }); %>
                
                <!-- Pagination -->
                <div class="d-flex justify-content-center mt-4">
                    <div class="pagination">
                        <% if (currentPage > 1) { %>
                            <a href="/orders?page=<%= currentPage - 1 %>" class="prev-arrow">
                                <i class="fa fa-long-arrow-left" aria-hidden="true"></i>
                            </a>
                        <% } %>
                    
                        <% if (totalPages > 5 && currentPage > 3) { %>
                            <a href="/orders?page=1">1</a>
                            <% if (currentPage > 4) { %>
                                <a href="#" class="dot-dot">
                                    <i class="fa fa-ellipsis-h" aria-hidden="true"></i>
                                </a>
                            <% } %>
                        <% } %>
                    
                        <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                            <a href="/orders?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                        <% } %>
                    
                        <% if (totalPages > 5 && currentPage < totalPages - 2) { %>
                            <% if (currentPage < totalPages - 3) { %>
                                <a href="#" class="dot-dot">
                                    <i class="fa fa-ellipsis-h" aria-hidden="true"></i>
                                </a>
                            <% } %>
                            <a href="/orders?page=<%= totalPages %>"><%= totalPages %></a>
                        <% } %>
                    
                        <% if (currentPage < totalPages) { %>
                            <a href="/orders?page=<%= currentPage + 1 %>" class="next-arrow">
                                <i class="fa fa-long-arrow-right" aria-hidden="true"></i>
                            </a>
                        <% } %>
                    </div>
                </div>
                
            <% } else { %>
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                    </div>
                    <h3>No orders yet</h3>
                    <p class="text-muted">When you place an order, it will appear here.</p>
                    <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Return Modal -->
<div class="modal fade" id="returnModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="returnForm">
                    <div class="mb-3">
                        <label class="form-label">Return Reason Category</label>
                        <select class="form-select" id="returnReason" required>
                            <option value="">Select a reason</option>
                            <option value="Wrong size">Wrong size</option>
                            <option value="Damaged product">Damaged product</option>
                            <option value="Not as described">Not as described</option>
                            <option value="Quality issues">Quality issues</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Detailed Description</label>
                        <textarea class="form-control" id="returnDescription" rows="3" placeholder="Please provide more details about your return reason..." required></textarea>
                        <small class="text-muted">Please explain the issue in detail to help us better understand your return request.</small>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Upload Images (Optional)</label>
                        <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                        <small class="text-muted">You can upload up to 3 images</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return Request</button>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 for dialogs -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
let currentOrderId = null;

function initiateReturn(orderId) {
    currentOrderId = orderId;
    const modal = new bootstrap.Modal(document.getElementById('returnModal'));
    modal.show();
}

document.getElementById('returnReason').addEventListener('change', function() {
    const otherReasonDiv = document.getElementById('otherReasonDiv');
    if (this.value === 'Other') {
        otherReasonDiv?.classList.remove('d-none');
    } else {
        otherReasonDiv?.classList.add('d-none');
    }
});

async function submitReturn() {
    try {
        const reasonSelect = document.getElementById('returnReason');
        const returnDescription = document.getElementById('returnDescription');
        const imagesInput = document.getElementById('returnImages');
        
        const returnReason = reasonSelect.value;
        const description = returnDescription.value;

        if (!returnReason || !description) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a reason category and provide a detailed description!',
            });
            return;
        }

        const formData = new FormData();
        formData.append('orderId', currentOrderId);
        formData.append('returnReason', returnReason);
        formData.append('returnDescription', description);

        const files = imagesInput.files;
        for (let i = 0; i < Math.min(files.length, 3); i++) {
            formData.append('images', files[i]);
        }

        // Show loading indicator
        Swal.fire({
            title: 'Processing...',
            html: 'Submitting your return request',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        const response = await fetch('/returnOrder', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Return request submitted successfully!',
                confirmButtonText: 'OK'
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.message || 'Failed to submit return request',
        });
    }
}

async function cancelReturn(orderId) {
    try {
        const result = await Swal.fire({
            title: 'Cancel Return Request',
            text: 'Are you sure you want to cancel your return request?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        });

        if (result.isConfirmed) {
            // Show loading indicator
            Swal.fire({
                title: 'Processing...',
                html: 'Canceling your return request',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const response = await fetch('/cancelReturnRequest', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId }),
            });

            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Return request cancelled successfully',
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }
        }
    } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to cancel return request'
        });
    }
}

async function cancelOrder(orderId) {
    const { value: reasonOption } = await Swal.fire({
        title: 'Cancel Order',
        input: 'select',
        inputLabel: 'Select a reason for cancellation',
        inputOptions: {
            'Ordered by mistake': 'Ordered by mistake',
            'Found a better price': 'Found a better price',
            'Delivery took too long': 'Delivery took too long',
            'Item no longer needed': 'Item no longer needed',
            'Changed my mind': 'Changed my mind',
            'Wrong item ordered': 'Wrong item ordered',
            'Other': 'Other'
        },
        showCancelButton: true
    });

    if (!reasonOption) return;

    let finalReason = reasonOption;

    if (reasonOption === 'Other') {
        const { value: otherReason } = await Swal.fire({
            title: 'Cancel Order',
            input: 'textarea',
            inputLabel: 'Please provide a reason for cancellation',
            inputPlaceholder: 'Type your reason here...',
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to provide a reason!';
                }
            }
        });

        if (!otherReason) return;
        finalReason = otherReason;
    }

    try {
        // Show loading indicator
        Swal.fire({
            title: 'Processing...',
            html: 'Canceling your order',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        const response = await fetch('/cancelOrder', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId, reason: finalReason }),
        });

        const data = await response.json();

        if (data.success) {
            await Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Order cancelled successfully',
                timer: 1500
            });
            location.reload();
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to cancel order'
        });
    }
}

function confirmLogout(event) {
    event.preventDefault();
    Swal.fire({
        title: "Are you sure?",
        text: "You will be logged out!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Logout"
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = "/logout";
        }
    });
}

// Add this for better mobile experience
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('focus', function() {
            // Scroll to make sure the input is visible when keyboard appears on mobile
            setTimeout(() => {
                this.scrollIntoView({behavior: 'smooth', block: 'center'});
            }, 300);
        });
    }
});
</script>

<%- include('../partials/user/footer') %>