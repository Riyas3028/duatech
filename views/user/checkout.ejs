<%- include("../../views/partials/user/header") %>
<!-- Bootstrap 5 -->
<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"> -->
<!-- Bootstrap 5 CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap 5 JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
   <div class="container">
       <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
           <div class="col-first">
               <h1>Checkout</h1>
               <nav class="d-flex align-items-center">
                   <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
                   <a href="/cart">Cart<span class="lnr lnr-arrow-right"></span></a>
                   <a href="/checkout">Checkout</a>
               </nav>
           </div>
       </div>
   </div>
</section>
<!-- End Banner Area -->

<style>
   /* Base styles */
   .order-summary {
       background-color: white;
       padding: 20px;
       border-radius: 5px;
       box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
       margin-bottom: 30px;
   }
   
   /* Product styles */
   .order-summary img {
       width: 50px;
       height: 50px;
       object-fit: cover;
   }
   
   .order-summary .product-container {
       display: flex;
       align-items: center;
       margin-bottom: 10px;
   }
   
   .order-summary .product-info {
       margin-left: 10px;
       flex-grow: 1;
       min-width: 0; /* Prevents flex item from overflowing */
   }
   
   .order-summary .product-name {
       font-size: 14px;
       margin-bottom: 0;
       white-space: nowrap;
       overflow: hidden;
       text-overflow: ellipsis;
   }
   
   .order-summary .product-mn {
       font-size: 12px;
       color: gray;
       margin-bottom: 0;
   }
   
   .order-summary .product-price {
       color: blue;
       font-weight: bold;
       white-space: nowrap;
   }
   
   /* Address card styles */
   .address-cards .card {
       border: 2px solid #e9ecef;
       transition: all 0.3s ease;
       cursor: pointer;
       margin-bottom: 15px;
       height: 100%;
   }
   
   .address-cards .card:hover {
       border-color: #007bff;
       box-shadow: 0 0 10px rgba(0,0,0,0.1);
   }
   
   .address-cards .form-check {
       padding-left: 0;
   }
   
   .address-cards .form-check-input {
       position: absolute;
       right: 15px;
       top: 15px;
   }
   
   .address-cards .form-check-label {
       display: block;
       width: 100%;
       cursor: pointer;
   }
   
   .address-cards .card.selected {
       border-color: #007bff;
       background-color: #f8f9ff;
   }
   
   /* Button styles */
   .order-summary .apply-btn {
       background-color: #ffc107;
       color: white;
   }
   
   .order-summary .place-order-btn {
       background-color: #ffc107;
       color: white;
       padding: 10px 20px;
       font-size: 16px;
       width: 100%;
   }
   
   /* Responsive adjustments */
   @media (max-width: 767px) {
       .container {
           padding-left: 15px;
           padding-right: 15px;
       }
       
       .order-summary {
           padding: 15px;
       }
       
       .order-summary .product-container {
           flex-wrap: wrap;
       }
       
       .order-summary .product-info {
           width: calc(100% - 60px);
       }
       
       .order-summary .product-price {
           width: 100%;
           text-align: left;
           margin-top: 5px;
           margin-left: 60px;
       }
       
       .coupon-section .input-group {
           flex-direction: column;
       }
       
       .coupon-section .input-group input {
           margin-bottom: 10px;
           width: 100%;
       }
       
       .coupon-section .input-group button {
           width: 100%;
       }
   }
   
   @media (max-width: 575px) {
       .breadcrumb-banner {
           padding: 15px;
       }
       
       .breadcrumb-banner h1 {
           font-size: 24px;
       }
   }
</style>

<div class="container py-4">
   <div class="row">
       <!-- Billing Address -->
       <div class="col-lg-7 col-md-12 mb-4">
           <div class="bg-white p-4 rounded shadow-sm">
               <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
                   <h2 class="h4 mb-2 mb-sm-0">Shipping Address</h2>
                   <a href="/addAddressCheckout" class="btn btn-primary">Add New Address</a>
               </div>
               
               <!-- Address Selection Area -->
               <div class="address-cards">
                   <% if (userAddress && userAddress.address.length > 0) { %>
                       <div class="row">
                           <% userAddress.address.forEach((address) => { %>
                               <div class="col-md-6 mb-3">
                                   <div class="card h-100">
                                       <div class="card-body">
                                           <div class="form-check">
                                               <input class="form-check-input" type="radio" 
                                                     name="selectedAddress" 
                                                     id="address_<%= address._id %>" 
                                                     value="<%= address._id %>">
                                               <label class="form-check-label" for="address_<%= address._id %>">
                                                   <span class="badge badge-primary mb-2"><%= address.addressType %></span>
                                                   <h6 class="mb-1"><%= address.name %></h6>
                                                   <p class="mb-1 text-muted small">
                                                       <%= address.streetAddress %><br>
                                                       <%= address.city %>, <%= address.state %><br>
                                                       <%= address.country %><br>
                                                       Phone: <%= address.phone %>
                                                   </p>
                                               </label>
                                           </div>
                                       </div>
                                   </div>
                               </div>
                           <% }); %>
                       </div>
                   <% } else { %>
                       <div class="text-center py-4">
                           <p class="mb-3">No addresses available</p>
                           <a href="/addAddressCheckout" class="btn btn-primary">Add Your First Address</a>
                       </div>
                   <% } %>
               </div>

               <!-- Hidden select for form compatibility -->
               <select id="existingAddress" style="position: absolute; visibility: hidden; opacity: 0; pointer-events: none;">
                   <option selected>Select an address</option>
                   <% if (userAddress && userAddress.address.length > 0) { %>
                       <% userAddress.address.forEach((address) => { %>
                           <option value="<%= address._id %>">
                               <%= address.addressType %>
                           </option>
                       <% }); %>
                   <% } %>
               </select>
           </div>
       </div>
           
       <!-- Order Summary -->
       <div class="col-lg-5 col-md-12">
           <div class="order-summary">
               <h2 class="h4 mb-4">Your Order</h2>
               <div class="border-bottom pb-3 mb-3">
                   <div class="d-flex justify-content-between mb-2">
                       <span class="font-weight-bold">Products</span>
                       <span class="font-weight-bold">Subtotal</span>
                   </div>
                   <% if (cartItems && cartItems.length > 0) { %>
                       <% let subtotal = 0; %>
                       <% cartItems.forEach(function(item) { %>
                           <% subtotal += item.totalPrice; %>
                           <div class="d-flex justify-content-between align-items-start mb-3 product-container">
                               <a style="text-decoration: none; display: flex; align-items: center; flex-grow: 1;" href="/productDetails?id=<%=item.product._id%>">
                                   <img src="/uploads/re-image/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="mr-2">
                                   <div class="product-info">
                                       <p class="product-name"><%= item.product.productName.split('|')[0].trim() %> (x<%= item.quantity %>)</p>
                                       <p class="product-mn"><%= item.product.category.name %></p>
                                   </div>
                               </a>
                               <span class="product-price">â‚¹ <%= item.totalPrice.toFixed(2) %></span>
                           </div>
                       <% }) %>
                   <% } else { %>
                       <div class="text-center py-3">
                           <p class="lead mb-4">No item found in Cart</p>
                       </div>
                   <% } %>
               </div>
               
               <div class="border-bottom pb-3 mb-3">
                   <div class="coupon-section mb-4">
                       <h3 class="h5 mb-3">Apply Coupon</h3>
                       <div class="input-group">
                        <input
                          type="text"
                          id="couponCode"
                          class="form-control"
                          placeholder="Enter coupon code"
                        />
                        <button class="btn btn-primary" onclick="applyCoupon()">
                          Apply
                        </button>
                      </div>
                       <p id="couponMessage" class="mt-2" style="display: none;"></p>
                       <a href="#" class="text-primary fw-bold" data-bs-toggle="modal" data-bs-target="#couponModal">
                        View Coupons
                      </a>
                   </div>
               
                   <div id="appliedCoupon" style="display: none;">
                       <p>Applied Coupon: <span id="appliedCouponName"></span></p>
                       <button class="btn btn-sm btn-danger" onclick="removeCoupon()">Remove</button>
                   </div>
                   <div class="d-flex justify-content-between mb-2">
                       <span>Subtotal</span>
                       <span>â‚¹ <span id="subtotal"><%= (subtotal-(subtotal*.18)).toFixed(2) %></span></span>
                   </div>
                   <div class="d-flex justify-content-between mb-2">
                    <span>GST</span>
                    <span>â‚¹ <span id="subtotal"><%= (subtotal*.18).toFixed(2) %></span></span>
                </div>
                   <div class="d-flex justify-content-between mb-2">
                       <span>Coupon Discount</span>
                       <span>(-) â‚¹ <span id="couponDiscount">0.00</span></span>
                   </div>
                   <div class="d-flex justify-content-between mb-2">
                       <span>Shipping</span>
                       <%if(subtotal<50000){%>
                       <span>â‚¹200</span>
                       <%}else{%>
                        <span class="text-success">Free shipping</span>
                        <%}%>
                   </div>
                   <div class="text-right text-primary mb-2">
                       <a href="#" onclick="showShippingCharge(); return false;">View shipping charge</a>
                   </div>
                   <div class="d-flex justify-content-between font-weight-bold">
                       <span>Total</span>
                       <span class="total-price">â‚¹ <span id="grandTotal"><%= subtotal > 50000 ? subtotal.toFixed(2) : (subtotal+200).toFixed(2) %></span></span>
                   </div>
               </div>
               <div class="mb-4">
                   <h3 class="h5 mb-3">Payment Method</h3>
                   <div class="mb-3">
                       <label class="d-flex align-items-center">
                           <input type="radio" name="payment" value="cod" class="mr-2">
                           <span>Cash on delivery</span>
                       </label>
                   </div>
                   <div class="mb-3">
                    <label class="d-flex align-items-center">
                        <input type="radio" name="payment" value="online payment" class="mr-2">
                        <img src="./img/icon/razorpay.webp" alt="" style="height: 30px;">
                        <span class="ml-2">Online Payment</span>
                    </label>
                </div>
                <div class="mb-3">
                    <label class="d-flex align-items-center">
                        <input type="radio" name="payment" value="wallet" class="mr-2">
                        <span>Wallet Payment (Balance: â‚¹<%= wallet.balance.toFixed(2) %>)</span>
                    </label>
                </div>
               </div>
               <button class="btn place-order-btn btn-block">Place Order</button>
           </div>
       </div>
   </div>
</div>

<!-- Coupon Modal -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="couponModalLabel">Select a Coupon</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body ">
          <div class="coupon-cards">
            <% if (coupons && coupons.length > 0) { %>
              <div class="row">
                <% coupons.forEach((coupon) => { %>
                  <div class="col-12 mb-3"> 
                    <div class="card h-100 shadow-sm border-primary w-100">
                      <div class="card-body d-flex align-items-center ms-2">
                        <input
                          class="form-check-input me-3"
                          type="radio"
                          name="selectedCoupon"
                          id="coupon_<%= coupon._id %>"
                          value="<%= coupon._id %>"
                          <%if(coupon.minimumPrice>subtotal){%>
                          disabled
                          <%}%>
                        />
                        <label class="form-check-label w-100" for="coupon_<%= coupon._id %>">
                          <h6 class="text-primary fw-bold mb-1"><%= coupon.name %></h6>
                          <p class="text-muted mb-1 small">
                           <span class="text-success"> <strong><%= coupon.offerPrice %> Off</strong></span> On Orders Above <%= coupon.minimumPrice %>
                            <br>Expires on <span class="text-warning"><%= new Date(coupon.expireOn).toDateString() %></span><br>
                            <%if(coupon.minimumPrice>subtotal){%>
                              <span>Add Items worth <strong class="text-danger"><%=coupon.minimumPrice-subtotal%></strong> to avail this Offer</span>
                            <%}%>
                          </p>
                        </label>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } else { %>
              <div class="text-center py-4">
                <p class="mb-3">No coupons available</p>
              </div>
            <% } %>
          </div>
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary mt-2" onclick="clearCouponSelection()">Clear Selection</button>
  
          <button type="button" class="btn btn-primary" id="applyCouponBtn">Proceed</button>
        </div>
      </div>
    </div>
  </div>
<!-- Wallet Payment Modal -->
<div class="modal fade" id="walletPaymentModal" tabindex="-1" aria-labelledby="walletPaymentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="walletPaymentModalLabel">Wallet Payment</h5>
                <!-- <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> -->
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <h6>Available Balance: â‚¹<span id="walletBalance"><%= wallet.balance.toFixed(2) %></span></h6>
                    <h6>Payable Amount: â‚¹<span id="payableAmount"></span></h6>
                </div>
                <div id="insufficientFunds" style="display: none;">
                    <div class="alert alert-warning">
                        Insufficient funds in wallet. Please add money to continue.
                    </div>
                    <a href="/wallet#add-money-button" class="btn btn-primary">Add Money</a>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirmWalletPayment">Pay Now</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<!-- Bootstrap 5 CDN (JS + Popper bundled) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    function checkStockAvailability() {
       return fetch('/check-stock')
           .then(response => response.json())
           .then(data => {
               if (!data.success) {
                   throw new Error(data.message);
               }
               return data.items;
           });
    }

    async function placeOrder() {
       try {
           const selectedAddress = document.getElementById('existingAddress');
           const paymentMethod = document.querySelector('input[name="payment"]:checked');

           if (!selectedAddress || selectedAddress.value === 'Select an address') {
               Swal.fire('Error', 'Please select a shipping address', 'error');
               return;
           }

           if (!paymentMethod) {
               Swal.fire('Error', 'Please select a payment method', 'error');
               return;
           }

       
           proceedWithOrder();
       } catch (error) {
           console.error('Error:', error);
           Swal.fire('Error', error.message || 'An error occurred while placing the order1', 'error');
       }
    }

    function proceedWithOrder() {
       const selectedAddress = document.getElementById('existingAddress');
       const paymentMethod = document.querySelector('input[name="payment"]:checked');

       const orderData = {
           addressId: selectedAddress.value,
           paymentMethod: paymentMethod.value,
           couponCode: appliedCoupon ? appliedCoupon.name : null
       };

       switch (paymentMethod.value) {
           case 'cod':
               processCODOrder(orderData);
               break;
           case 'online payment':

               processRazorpayOrder(orderData);
               break;
           case 'wallet':
               processWalletOrder(orderData);
               break;
       }
    }


    function processCODOrder(orderData) {
       fetch('/placeOrder', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json',
           },
           body: JSON.stringify(orderData)
       })
       .then(response => response.json())
       .then(data => {
           console.log("Response from server:", data);
           if (data.success) {
               Swal.fire({
                   title: 'Order Placed Successfully!',
                   icon: 'success',
                   showConfirmButton:false,
                   timer:1500
               }).then((result) => {
                       window.location.href = '/confirmation';
               });
           } else {
               Swal.fire('Error', data.message || 'An error occurred while placing the order', 'error');
           }
       })
       .catch(error => {
           console.error('Error:', error);
           Swal.fire('Error', 'An error occurred while placing the order', 'error');
       });
    }


    function processWalletOrder(orderData) {
       const walletBalance = parseFloat(document.getElementById('walletBalance').textContent);
       const payableAmount = parseFloat(document.getElementById('grandTotal').textContent);

       document.getElementById('payableAmount').textContent = payableAmount.toFixed(2);

       const walletPaymentModal = new bootstrap.Modal(document.getElementById('walletPaymentModal'));
       const insufficientFunds = document.getElementById('insufficientFunds');
       const confirmWalletPayment = document.getElementById('confirmWalletPayment');

       if (walletBalance < payableAmount) {
           insufficientFunds.style.display = 'block';
           confirmWalletPayment.style.display = 'none';
       } else {
           insufficientFunds.style.display = 'none';
           confirmWalletPayment.style.display = 'block';
       }

       walletPaymentModal.show();
    }

    function placeWalletOrder(orderData) {
       fetch('/placeWalletOrder', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json',
           },
           body: JSON.stringify(orderData)
       })
       .then(response => response.json())
       .then(data => {
           if (data.success) {
               Swal.fire({
                   title: 'Order Placed Successfully!',
                   icon: 'success',
                   timer:2000,
                   timerProgressBar:true

               }).then((result) => {
                       window.location.href = '/confirmation';
               });
           } else {
               Swal.fire('Error', data.message || 'Failed to place order', 'error');
           }
       })
       .catch(error => {
           console.error('Error:', error);
           Swal.fire('Error', 'An error occurred while placing the order', 'error');
       });
    }


    async function processRazorpayOrder(orderData) {
        const response = await  fetch('/order/createOrder', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json',
           },
           body: JSON.stringify(orderData)
       })
       
       const order = await response.json();

      const options = {
      key: "<%= process.env.RAZORPAY_KEY_ID %>",
      amount: order.amount,
      currency: "INR",
      name: "DuaTech",
      description: "Order Payment",
      order_id: order.id,
      handler: async function (response) {
        console.log("Razorpay Handler Triggered", response);
        const verifyRes = await fetch("/order/verifyPayment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature,
            amount: order.amount,
            addressId:orderData.addressId,
            paymentMethod:orderData.paymentMethod
          }),
        });

        const result = await verifyRes.json();
        if (result.success) {
          Swal.fire({
            title: "Success!",
            text: "Payment Successfull!",
            icon: "success",
            timer:1500,
            timerProgressBar:true
          }).then(() => {
            window.location.href = "/confirmation";
          });
        } else {
          Swal.fire({
            title: "Error!",
            text: "Payment Verification Failed",
            icon: "error",
            confirmButtonText: "Try Again",
          });
        }
      },
      prefill: {
        email: "<%= user.email %>",
        contact: "<%= user.phone %>",
      },
      theme: { color: "#3399cc" },
    };

    const paymentObject = new Razorpay(options);
    paymentObject.open();
    }

    document.getElementById('confirmWalletPayment').addEventListener('click', async () => {
       const selectedAddress = document.getElementById('existingAddress');
       if (!selectedAddress || selectedAddress.value === 'Select an address') {
           alert('Please select a shipping address');
           return;
       }

       const orderData = {
           addressId: selectedAddress.value,
           paymentMethod: 'wallet',
           couponCode: appliedCoupon ? appliedCoupon.name : null
       };

       try {
           const response = await fetch('/placeWalletOrder', {
               method: 'POST',
               headers: {
                   'Content-Type': 'application/json'
               },
               body: JSON.stringify(orderData)
           });

           const data = await response.json();
           if (data.success) {
               Swal.fire({
                   title: 'Order Placed Successfully!',
                   icon: 'success',
                   timer:2000
               }).then((result) => {

                       window.location.href = '/confirmation';
               });
           } else {
               Swal.fire('Error', data.message || 'Failed to place order', 'error');
           }
       } catch (error) {
           console.error('Error:', error);
           Swal.fire('Error', 'An error occurred while placing the order', 'error');
       }
    });

      
       document.querySelector('.place-order-btn').onclick = placeOrder;
  </script>
  <script>
   
    document
      .querySelectorAll('input[name="selectedAddress"]')
      .forEach((radio) => {
        radio.addEventListener("change", function () {
         
          document.getElementById("existingAddress").value = this.value;

          
          document.querySelectorAll(".address-cards .card").forEach((card) => {
            card.classList.remove("selected");
          });
          this.closest(".card").classList.add("selected");
        });
      });
  </script>

  <script>
   
    document
      .getElementById("addNewAddressBtn")
      .addEventListener("click", function () {
        document.getElementById("newAddressForm").style.display = "block";
      });
  </script>
  <script>
    function clearCouponSelection() {
    const selectedRadio = document.querySelector('input[name="selectedCoupon"]:checked');
    if (selectedRadio) {
        selectedRadio.checked = false;
    }
}
document.getElementById("applyCouponBtn").addEventListener("click", function () {
    const selectedCoupon = document.querySelector('input[name="selectedCoupon"]:checked');
    const couponModal = document.getElementById("couponModal");
    const modalInstance = bootstrap.Modal.getInstance(couponModal);

    if (selectedCoupon) {
        const couponLabel = document.querySelector(`label[for="${selectedCoupon.id}"] h6`).textContent;
        document.getElementById("couponCode").value = couponLabel;
    }

    // Add event listener before hiding modal
    couponModal.addEventListener('hidden.bs.modal', () => {
        // Only do this if necessary
        document.querySelectorAll('.modal-backdrop').forEach(backdrop => backdrop.remove());
        document.body.classList.remove("modal-open");
        document.body.style.overflow = "";
    }, { once: true });

    if (modalInstance) {
        modalInstance.hide();
    }
});


    let appliedCoupon = null;

    function applyCoupon() {
       const couponCode = document.getElementById('couponCode').value;
       const subtotal = parseFloat(document.getElementById('subtotal').textContent);

       fetch('/applyCoupon', {
           method: 'POST',
           headers: {
               'Content-Type': 'application/json',
           },
           body: JSON.stringify({ couponCode, subtotal }),
       })
       .then(response => response.json())
       .then(data => {
           const messageElement = document.getElementById('couponMessage');
           if (data.success) {
               appliedCoupon = data.coupon;
               updateOrderSummary();
               messageElement.textContent = 'Coupon applied successfully!';
               messageElement.style.color = 'green';
               document.getElementById('appliedCoupon').style.display = 'block';
               document.getElementById('appliedCouponName').textContent = data.coupon.name;
               document.querySelector('.coupon-section').style.display = 'none';
               Swal.fire('success', `coupon ${data.coupon.name} applied successfully`, 'success');
           } else {
               messageElement.textContent = data.message;
               messageElement.style.color = 'red';
           }
           messageElement.style.display = 'block';
       })
       .catch(error => {
           console.error('Error:', error);
           Swal.fire('Error', 'An error occurred while applying the coupon', 'error');
       });
    }

    function removeCoupon() {
    fetch('/removeCoupon', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            appliedCoupon = null;
            updateOrderSummary();
            document.getElementById('appliedCoupon').style.display = 'none';
            document.querySelector('.coupon-section').style.display = 'block';
            document.getElementById('couponMessage').style.display = 'none';
            document.getElementById('couponCode').value = '';
            Swal.Fire('waring',"Coupon removed",'warning');
        } else {
          Swal.Fire('error',"Failed to remove coupon",'error');
        }
    })
    .catch(error => {
      Swal.Fire('error',"error occured while removing coupon",'error');
    });
}


    function updateOrderSummary() {
       const subtotalElement = document.getElementById('subtotal');
       const couponDiscountElement = document.getElementById('couponDiscount');
       const grandTotalElement = document.getElementById('grandTotal');

       const subtotal = parseFloat(subtotalElement.textContent);
       let discount = 0;

       if (appliedCoupon) {
           discount = appliedCoupon.offerPrice;
       }
       let grandTotal
        if(subtotal<50000){
          grandTotal = subtotal - discount+200;
        }else{
          grandTotal = subtotal - discount
        }
       

       couponDiscountElement.textContent = discount.toFixed(2);
       grandTotalElement.textContent = grandTotal.toFixed(2);
    }
  </script>

<!-- start footer Area -->
<footer class="footer-area section_gap">
    <div class="container">
        <div class="row">
            <div class="col-lg-3  col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>About Us</h6>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore dolore
                        magna aliqua.
                    </p>
                </div>
            </div>
            <div class="col-lg-4  col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>Newsletter</h6>
                    <p>Stay update with our latest</p>
                    <div class="" id="mc_embed_signup">

                        <form target="_blank" novalidate="true" action="https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01"
                         method="get" class="form-inline">

                            <div class="d-flex flex-row">

                                <input class="form-control" name="EMAIL" placeholder="Enter Email" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter Email '"
                                 required="" type="email">


                                <button class="click-btn btn btn-default"><i class="fa fa-long-arrow-right" aria-hidden="true"></i></button>
                                <div style="position: absolute; left: -5000px;">
                                    <input name="b_36c4fd991d266f23781ded980_aefe40901a" tabindex="-1" value="" type="text">
                                </div>

                                <!-- <div class="col-lg-4 col-md-4">
                                            <button class="bb-btn btn"><span class="lnr lnr-arrow-right"></span></button>
                                        </div>  -->
                            </div>
                            <div class="info"></div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-lg-3  col-md-6 col-sm-6">
                <div class="single-footer-widget mail-chimp">
                    <h6 class="mb-20">Instragram Feed</h6>
                    <ul class="instafeed d-flex flex-wrap">
                        <li><img src="img/i1.jpg" alt=""></li>
                        <li><img src="img/i2.jpg" alt=""></li>
                        <li><img src="img/i3.jpg" alt=""></li>
                        <li><img src="img/i4.jpg" alt=""></li>
                        <li><img src="img/i5.jpg" alt=""></li>
                        <li><img src="img/i6.jpg" alt=""></li>
                        <li><img src="img/i7.jpg" alt=""></li>
                        <li><img src="img/i8.jpg" alt=""></li>
                    </ul>
                </div>
            </div>
            <div class="col-lg-2 col-md-6 col-sm-6">
                <div class="single-footer-widget">
                    <h6>Follow Us</h6>
                    <p>Let us be social</p>
                    <div class="footer-social d-flex align-items-center">
                        <a href="#"><i class="fa fa-facebook"></i></a>
                        <a href="#"><i class="fa fa-twitter"></i></a>
                        <a href="#"><i class="fa fa-dribbble"></i></a>
                        <a href="#"><i class="fa fa-behance"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-bottom d-flex justify-content-center align-items-center flex-wrap">
            <p class="footer-text m-0"><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
</p>
        </div>
    </div>
</footer>
<!-- End footer Area -->

<script src="js/vendor/jquery-2.2.4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
 crossorigin="anonymous"></script>
<!-- <script src="js/vendor/bootstrap.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script src="js/jquery.ajaxchimp.min.js"></script>
<script src="js/jquery.nice-select.min.js"></script>
<script src="js/jquery.sticky.js"></script>
<script src="js/nouislider.min.js"></script>
<script src="js/countdown.js"></script>
<script src="js/jquery.magnific-popup.min.js"></script>
<script src="js/owl.carousel.min.js"></script>
<!--gmaps Js-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
<script src="js/gmaps.min.js"></script>
<script src="js/main.js"></script>
</body>

</html>